export default utility;
declare namespace utility {
    export { isAnyEmpty };
    export { checkIfBoolean };
    export { checkIfNumberisPositive };
    export { checkIfValidDate };
    export { verifyDatabaseFetchResults };
    export { checkIfInList };
    export { addErrorHandlingToAsyncFunction };
    export { checkIfNumberisGreaterThanZero };
    export { assertThatAsynchronousFunctionFails };
    export { assertThatAsyncFunctionReturnsRightThing };
    export { assertThatAsyncFunctionReturnsNull };
    export { isFetchResultEmpty };
    export { assertThatFunctionWorks };
    export { returnFetchedResultsFromDatabase };
    export { checkIfString };
}
declare function isAnyEmpty(arr: any): boolean;
declare function checkIfBoolean(x: any, errorMessage: any): void;
declare function checkIfNumberisPositive(x: any, errorMessage: any): void;
declare function checkIfValidDate(x: any, errorMessage: any): Date;
declare function verifyDatabaseFetchResults(fetchResult: any, errorMessage: any): void;
declare function checkIfInList(list: any, item: any, errorMessage: any): void;
declare function addErrorHandlingToAsyncFunction(func: any, errorMessage: any, ...params: any[]): any;
declare function checkIfNumberisGreaterThanZero(x: any, errorMessage: any): void;
declare function assertThatAsynchronousFunctionFails(func: any, errorMessage: any, ...params: any[]): any;
declare function assertThatAsyncFunctionReturnsRightThing(func: any, itemToReturn: any, ...params: any[]): any;
declare function assertThatAsyncFunctionReturnsNull(func: any, ...params: any[]): any;
declare function isFetchResultEmpty(fetchResult: any): boolean;
declare function assertThatFunctionWorks(func: any, ...params: any[]): any;
declare function returnFetchedResultsFromDatabase(query: any, arguements: any, valueWanted: any): any;
declare function checkIfString(x: any, errorMessage: any): void;
