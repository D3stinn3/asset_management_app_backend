declare namespace _default {
    export { physical_valuation };
    export { depSchedule };
    export { missingAssets };
    export { chainOfCustody };
    export { movements };
    export { categoryCount };
    export { getStockTakes };
    export { acquisitionReport };
    export { depreciationReport };
    export { getChildLocations };
    export { getStockTakesInLocations };
    export { getClosestStockTake };
    export { getAssetsInStockTakes };
    export { numOfAssetsInStockTakes };
    export { getClosestStockTakeM };
    export { assetsInLocationByCategory };
    export { getAssetsInLocations };
    export { getAccumulatedAcquisitionCost };
    export { getDepreciationDetails };
}
export default _default;
declare const physical_valuation: "SELECT a.assetTag AS \"Asset Tag\", a.serialnumber AS \"Serial Number\", a.makeandmodelno AS \n                            \"Make And Model Number\", c.name AS \"Category\", l.name AS \"Location\" FROM Asset a JOIN Category c \n                            ON a.categoryid = c.id JOIN Location l ON l.id = a.locationid WHERE a.assettag IN (SELECT assetTag FROM \n                            StockTakeAssets WHERE stockTakeID = $1)";
declare const depSchedule: "SELECT year, openingBookValue FROM DepreciationSchedule WHERE assetID = $1 ORDER BY year ASC";
declare const missingAssets: "SELECT assettag FROM Asset WHERE assettag NOT IN (SELECT assettag FROM StockTakeAssets WHERE stocktakeid = $1)";
declare const chainOfCustody: "SELECT timestamp, logdescription, username FROM Log WHERE logdescription ~* $1 AND eventtype = 'Allocate Asset' \n                        ORDER BY timestamp;";
declare const movements: "SELECT timestamp, username FROM Log WHERE logdescription ~* $1 AND eventtype = 'Movement' ORDER BY timestamp";
declare const categoryCount: "SELECT c.name, foo.count FROM Category c FULL JOIN (SELECT COUNT(*), c.name FROM Asset a JOIN Category c ON c.id = a.categoryid WHERE a.locationID = $1 GROUP BY c.name) AS foo ON foo.name = c.name";
declare const getStockTakes: "SELECT s.date, s.id, l.name AS \"Location\"  FROM Stocktake s JOIN Location l ON l.id = s.locationid";
declare const acquisitionReport: "SELECT a.assettag, l.name AS \"Location\", a.acquisitioncost FROM Asset a JOIN Location l ON l.id = a.locationid WHERE a.acquisitiondate BETWEEN $1 AND $2";
declare const depreciationReport: "SELECT year, openingbookvalue FROM DepreciationSchedule WHERE assetTag = $1";
declare const getChildLocations: "SELECT name, id FROM Location WHERE parentLocationID = $1";
declare const getStockTakesInLocations: "SELECT id FROM StockTake WHERE locationID = ANY($1)";
declare const getClosestStockTake: "SELECT id FROM StockTake WHERE date <= $1 AND locationID = $2 ORDER BY date DESC LIMIT 1";
declare const getAssetsInStockTakes: "SELECT COUNT(assetID) - (SELECT COUNT(assetID) FROM StockTakeAssets WHERE stockTakeID = ALL($1)) AS missing FROM Asset";
declare const numOfAssetsInStockTakes: "SELECT COUNT(assetID) AS missing FROM StockTakeAssets WHERE stockTakeID = ALL($1)";
declare const getClosestStockTakeM: "SELECT id FROM StockTake WHERE date BETWEEN $1 AND $2 AND locationID = $3 ORDER BY date DESC LIMIT 1";
declare const assetsInLocationByCategory: "SELECT c.name, foo.count FROM Category c FULL JOIN (SELECT COUNT(*), c.name FROM Asset a JOIN Category c ON c.id = a.categoryid WHERE a.locationID = $1 GROUP BY c.name) AS foo ON foo.name = c.name";
declare const getAssetsInLocations: "SELECT COUNT(assetID) AS missing FROM Asset WHERE locationID = ANY($1)";
declare const getAccumulatedAcquisitionCost: "SELECT SUM(acquisitionCost) FROM Asset WHERE locationID = $1 AND acquisitionDate BETWEEN $2 AND $3";
declare const getDepreciationDetails: "SELECT c.name, c.depreciationtype, d.percentage FROM Category c FULL Join DepreciationPercent d ON c.id = d.categoryid";
